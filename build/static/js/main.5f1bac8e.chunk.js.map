{"version":3,"sources":["components/Formulario.js","components/Cita.js","App.js","index.js"],"names":["Formulario","crearCita","useState","medico","especialidad","fecha","hora","observaciones","cita","actualizarCita","error","actualizarError","actualizarState","e","target","name","value","className","onSubmit","preventDefault","trim","id","nanoid","type","placeholder","onChange","Cita","eliminarCita","onClick","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f1bac8e.chunk.js","sourcesContent":["import React, {Fragment, useState} from 'react';\r\nimport {nanoid} from \"nanoid\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({crearCita}) => {\r\n//Crear state para leer respuestas\r\n\r\nconst [cita, actualizarCita] = useState({\r\n    medico: '',\r\n    especialidad:'',\r\n    fecha:'',\r\n    hora:'', \r\n    observaciones:'', \r\n});\r\n\r\nconst [error, actualizarError] = useState(false)\r\n\r\n//Función que se ejecuta cuando el usuario escribe en input\r\n\r\nconst actualizarState = e =>{\r\n    actualizarCita({\r\n        ...cita, \r\n        [e.target.name]: e.target.value\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\n//Extrae valores\r\n\r\nconst {medico, especialidad, fecha, hora, observaciones} = cita;\r\n\r\n//Cuando el usuario envía la cita\r\nconst submitCita = e =>{\r\n    e.preventDefault();\r\n\r\n    //validar\r\n\r\n    if(medico.trim() === '' || especialidad.trim() === '' || hora.trim() === '' || fecha.trim() === '' ||observaciones.trim() === ''){\r\n        \r\n        actualizarError(true)\r\n        return;\r\n    }\r\n\r\n    //eliminar mensaje de error\r\n\r\n    actualizarError(false);\r\n\r\n\r\n    //asignar ID\r\n\r\n    cita.id= nanoid();\r\n    \r\n    //crear cita\r\n\r\n    crearCita(cita)\r\n\r\n    //reiniciar form\r\n\r\n    actualizarCita({\r\n      medico: '',\r\n      especialidad:'',\r\n      fecha:'',\r\n      hora:'', \r\n      observaciones:'', \r\n\r\n})}\r\n\r\n\r\n    return (\r\n<Fragment>\r\n    <h2>Crear turno</h2>\r\n\r\n    {error ? <p className=\"alerta-error\">Todos los campos son obligatorios</p> : null}\r\n\r\n    <form\r\n        onSubmit={submitCita}\r\n    >\r\n        <label>Médico:</label>\r\n        <input \r\n        type=\"text\" \r\n        name=\"medico\"\r\n        className=\"u-full-width\"\r\n        placeholder=\"Nombre Médico\"\r\n        onChange={actualizarState}\r\n        value={medico}\r\n        />\r\n<label>Especialidad:</label>\r\n        <input \r\n        type=\"text\" \r\n        name=\"especialidad\"\r\n        className=\"u-full-width\"\r\n        placeholder=\"Especialidad\"\r\n        onChange={actualizarState}\r\n        value={especialidad}\r\n        />\r\n        <label>Fecha del turno:</label>\r\n        <input \r\n        type=\"date\" \r\n        name=\"fecha\"\r\n        className=\"u-full-width\"\r\n        onChange={actualizarState}\r\n        value={fecha}\r\n        />\r\n        <label>Hora del turno:</label>\r\n        <input \r\n        type=\"time\" \r\n        name=\"hora\"\r\n        className=\"u-full-width\"\r\n        onChange={actualizarState}\r\n        value={hora}\r\n        />\r\n\r\n        <label>Observaciones:</label>\r\n        <textarea   \r\n        name=\"observaciones\"\r\n        className=\"u-full-width\"\r\n        onChange={actualizarState}\r\n        value={observaciones}\r\n        ></textarea>\r\n        <button\r\n        type=\"submit\"\r\n        className=\"button agregar u-full-width\"\r\n\r\n        >Agregar turno\r\n        </button>\r\n    </form>\r\n</Fragment>\r\n    );\r\n}\r\n\r\n\r\nFormulario.propTypes = {\r\n    crearCita: PropTypes.func.isRequired\r\n        \r\n    }\r\n\r\nexport default Formulario","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Cita = ({cita, eliminarCita}) => (\r\n   <div className =\"cita\">\r\n       <p>Médico: <span>{cita.medico}</span></p>\r\n       <p>Especialidad: <span>{cita.especialidad}</span></p>\r\n       <p>Día: <span>{cita.fecha}</span></p>\r\n       <p>Hora: <span>{cita.hora}</span></p>\r\n       <p>Observaciones: <span>{cita.observaciones}</span></p>\r\n   \r\n   <button\r\n   className=\"button eliminar u-full-width\"\r\n   onClick= { () => eliminarCita(cita.id)}\r\n   >\r\n       Eliminar &times;\r\n   </button>\r\n   </div> \r\n)\r\n\r\n\r\nCita.propTypes = {\r\n    cita: PropTypes.object.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired,   \r\n\r\n} \r\nexport default Cita;","import React, {Fragment, useState, useEffect} from 'react';\nimport Formulario from './components/Formulario'\nimport Cita from './components/Cita'\n\nfunction App() {\n\n\n  //Citas en localStorage\n\n  let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n  if (!citasIniciales){\n    citasIniciales=[] ;\n  }\n\n  //Arreglo de citas\n  const [citas, guardarCitas] = useState(citasIniciales);\n\n  //useEffect para hacer operaciones cuando el State cambia\n\n  useEffect( () => {\n    let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n    if(citasIniciales) {\n      localStorage.setItem('citas', JSON.stringify(citas))\n    } else{\n      localStorage.setItem('citas', JSON.stringify([]));\n   }\n  }, [citas]);\n\n  \n\n  const crearCita = cita => {\n   guardarCitas([\n     ...citas,\n     cita\n   ]);\n  }\n\n  //botón Eliminar cita por ID\n\n  const eliminarCita = id =>{\n    const nuevasCitas = citas.filter(cita =>cita.id !== id);\n    guardarCitas(nuevasCitas);\n  }\n\n   //Mensaje condicional\n\n   const titulo = citas.length === 0 ? 'No hay turnos' : 'Administra tus turnos'\n   \n   \n  return (\n<Fragment>\n    <h1>Administrador de turnos</h1>\n    \n      <div className=\"container\"> \n        <div className=\"row\">\n          <div className=\"one-half column\">\n          <Formulario\n          \n          crearCita = {crearCita}\n          />\n          </div>\n          <div className=\"one-half column\">\n           <h2>{titulo}</h2>\n\n          {citas.map(cita => (\n            <Cita\n            key= {cita.id}\n            cita= {cita}\n            eliminarCita = {eliminarCita}\n            />\n          ))}\n          \n          </div>\n        </div>\n      </div>\n  </Fragment>\n    );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}